/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2006-2025 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
pluginManagement {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        mavenLocal()
    }
    plugins {
        id 'org.kordamp.gradle.guide'   version kordampPluginVersion
        id 'org.ajoberstar.git-publish' version gitPluginVersion
    }
}

buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "org.kordamp.gradle:kordamp-parentbuild:$kordampBuildVersion"
        classpath "org.cyclonedx:cyclonedx-gradle-plugin:$cyclonedxPluginVersion"
    }
}
apply plugin: 'org.kordamp.gradle.kordamp-parentbuild'

rootProject.name = 'json-lib'

projects {
    directories = ['docs', 'subprojects']

    plugins {
        all {
            id 'base'
            id 'idea'
        }
        path(':') {
            id 'org.kordamp.gradle.java-project'
        }
        dirs(['subprojects']) {
            id 'java-library'
            id 'org.cyclonedx.bom'
        }
    }
}

enforce {
    rule(enforcer.rules.ExcludeDependencies) { r ->
        r.exclude('commons-logging:commons-logging')
        r.exclude('org.slf4j:slf4j-compile')
    }
    rule(enforcer.rules.ForceDependencies) { r ->
        r.dependencies.addAll 'xml-apis:xml-apis:2.0.2',
            "org.apache.commons:commons-lang3:$commonsLangVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "junit:junit:$junitVersion",
            "commons-beanutils:commons-beanutils:$commonsBeanutilsVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    }
}
