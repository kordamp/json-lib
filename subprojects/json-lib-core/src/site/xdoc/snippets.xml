<?xml version="1.0" encoding="UTF-8"?>
<document>

    <properties>
        <title>Json-lib::Snippets</title>
    </properties>

    <body>
        <section name="Snippets">
            <a name="JavaJSON"/>
            <subsection name="From Java to JSON">
                <ol>
                    <li>
                        <a href="#Creating a JSONObject from scratch">Creating a JSONObject from scratch</a>
                    </li>
                    <li>
                        <a href="#Creating a JSONObject from a JSON formatted string">Creating a JSONObject from a JSON formatted string</a>
                    </li>
                    <li>
                        <a href="#Creating a JSONObject from a Map">Creating a JSONObject from a Map</a>
                    </li>
                    <li>
                        <a href="#Creating a JSONObject from a JavaBean">Creating a JSONObject from a JavaBean</a>
                    </li>
                    <li>
                        <a href="#Creating a JSONArray from scratch">Creating a JSONArray from scratch</a>
                    </li>
                    <li>
                        <a href="#Creating a JSONArray from a JSON formatted string">Creating a JSONArray from a JSON formatted string</a>
                    </li>
                    <li>
                        <a href="#Creating a JSONArray from a Collection">Creating a JSONArray from a Collection</a>
                    </li>
                    <li>
                        <a href="#Creating a JSONArray from an array">Creating a JSONArray from an array</a>
                    </li>
                    <li>
                        <a href="#JavaScript functions">JavaScript functions</a>
                    </li>
                    <li>
                        <a href="#Exclude properties">Exclude properties</a>
                    </li>
                    <li>
                        <a href="#Exclude properties (with filters)">Exclude properties (with filters)</a>
                    </li>
                </ol>
            </subsection>
            <a name="JSONJava"/>
            <subsection name="From JSON to Java">
                <ol>
                    <li>
                        <a href="#JSONObject to DynaBean">JSONObject to DynaBean</a>
                    </li>
                    <li>
                        <a href="#JSONObject to JavaBean">JSONObject to JavaBean</a>
                    </li>
                    <li>
                        <a href="#JSONArray to List">JSONArray to List</a>
                    </li>
                    <li>
                        <a href="#JSONArray to array">JSONArray to array</a>
                    </li>
                    <li>
                        <a href="#JSONArray to array (type conversion)">JSONArray to array (type conversion)</a>
                    </li>
                    <li>
                        <a href="#JSONObject to JavaBean, exclude properties with filters">JSONObject to JavaBean, exclude properties with filters</a>
                    </li>
                </ol>
            </subsection>
            <a name="JSONXML"/>
            <subsection name="From JSON to XML">
                <ol>
                    <li>
                        <a href="#JSONObject to XML">JSONObject to XML</a>
                    </li>
                    <li>
                        <a href="#JSONObject to XML (no type hints)">JSONObject to XML (no type hints)</a>
                    </li>
                    <li>
                        <a href="#JSONObject to XML (with json prefix)">JSONObject to XML (with json prefix)</a>
                    </li>
                    <li>
                        <a href="#JSONObject to XML (change node names)">JSONObject to XML (change node names)</a>
                    </li>
                    <li>
                        <a href="#JSONArray to XML">JSONArray to XML</a>
                    </li>
                    <li>
                        <a href="#JSONArray to XML (no type hints)">JSONArray to XML (no type hints)</a>
                    </li>
                    <li>
                        <a href="#JSONArray to XML (with json prefix)">JSONArray to XML (with json prefix)</a>
                    </li>
                    <li>
                        <a href="#Flatten JSONArray into parent">Flatten JSONArray into parent</a>
                    </li>
                </ol>
            </subsection>
            <a name="XMLJSON"/>
            <subsection name="From XML to JSON">
                <ol>
                    <li>
                        <a href="#XML to JSONObject">XML to JSONObject</a>
                    </li>
                </ol>
            </subsection>
            <a name="Groovy"/>
            <subsection name="Groovy Support">
                <ol>
                    <li>
                        <a href="#Using the JsonGroovyBuilder">Using the JsonGroovyBuilder</a>
                    </li>
                </ol>
            </subsection>
            <a name="JRuby"/>
            <subsection name="JRuby Support">
                <ol>
                    <li>
                        <a href="#Creating a JSONObject">Creating a JSONObject</a>
                    </li>
                    <li>
                        <a href="#Append elements to JSONObject with &lt;&lt; (array)">Append elements to JSONObject with &lt;&lt; (array)</a>
                    </li>
                    <li>
                        <a href="#Append elements to JSONObject with &lt;&lt; (hash)">Append elements to JSONObject with &lt;&lt; (hash)</a>
                    </li>
                </ol>
            </subsection>
        </section>
        <section name="From Java to JSON">
            <subsection name="Creating a JSONObject from scratch">
                <textarea cols="80" rows="9" class="java:nocontrols:nogutter" name="srccode">
                    JSONObject jsonObject = new JSONObject()
                    .element( "string", "JSON" )
                    .element( "integer", "1" )
                    .element( "double", "2.0" )
                    .element( "boolean", "true" );
                    assertEquals( "JSON", jsonObject.getString("string") );
                    assertEquals( 1, jsonObject.getInt("integer") );
                    assertEquals( 2.0d, jsonObject.getDouble("double"), 0d );
                    assertTrue( jsonObject.getBoolean("boolean") );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JavaJSON">From Java to JSON</a>]
            </subsection>
            <subsection name="Creating a JSONObject from a JSON formatted string">
                <textarea cols="80" rows="6" class="java:nocontrols:nogutter" name="srccode">
                    String str = "{'string':'JSON', 'integer': 1, 'double': 2.0, 'boolean': true}";
                    JSONObject jsonObject = (JSONObject) JSONSerializer.toJSON( str );
                    assertEquals( "JSON", jsonObject.getString("string") );
                    assertEquals( 1, jsonObject.getInt("integer") );
                    assertEquals( 2.0d, jsonObject.getDouble("double"), 0d );
                    assertTrue( jsonObject.getBoolean("boolean") );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JavaJSON">From Java to JSON</a>]
            </subsection>
            <subsection name="Creating a JSONObject from a Map">
                <textarea cols="80" rows="10" class="java:nocontrols:nogutter" name="srccode">
                    Map map = new HashMap();
                    map.put( "string", "JSON" );
                    map.put( "integer", "1" );
                    map.put( "double", "2.0" );
                    map.put( "boolean", "true" );
                    JSONObject jsonObject = (JSONObject) JSONSerializer.toJSON( map );
                    assertEquals( "JSON", jsonObject.getString("string") );
                    assertEquals( 1, jsonObject.getInt("integer") );
                    assertEquals( 2.0d, jsonObject.getDouble("double"), 0d );
                    assertTrue( jsonObject.getBoolean("boolean") );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JavaJSON">From Java to JSON</a>]
            </subsection>
            <subsection name="Creating a JSONObject from a JavaBean">
                <textarea cols="80" rows="20" class="java:nocontrols:nogutter" name="srccode">
                    public class MyJavaBean {
                    private String string;
                    private int integer;
                    private double dooble;
                    private boolean bool;

                    // getters &amp; setters
                    }

                    MyJavaBean bean = new MyJavaBean();
                    bean.setString( "JSON" );
                    bean.setInteger( 1 );
                    bean.setDooble( 2.0d );
                    bean.setBool( true );
                    JSONObject jsonObject = (JSONObject) JSONSerializer.toJSON( bean );
                    assertEquals( "JSON", jsonObject.getString("string") );
                    assertEquals( 1, jsonObject.getInt("integer") );
                    assertEquals( 2.0d, jsonObject.getDouble("dooble"), 0d );
                    assertTrue( jsonObject.getBoolean("bool") );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JavaJSON">From Java to JSON</a>]
            </subsection>
            <subsection name="Creating a JSONArray from scratch">
                <textarea cols="80" rows="9" class="java:nocontrols:nogutter" name="srccode">
                    JSONArray jsonArray = new JSONArray()
                    .element( "JSON" )
                    .element( "1" )
                    .element( "2.0" )
                    .element( "true" );
                    assertEquals( "JSON", jsonArray.getString(0) );
                    assertEquals( 1, jsonArray.getInt(1) );
                    assertEquals( 2.0d, jsonArray.getDouble(2), 0d );
                    assertTrue( jsonArray.getBoolean(3) );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JavaJSON">From Java to JSON</a>]
            </subsection>
            <subsection name="Creating a JSONArray from a JSON formatted string">
                <textarea cols="80" rows="6" class="java:nocontrols:nogutter" name="srccode">
                    String str = "['JSON', 1, 2.0, true]";
                    JSONArray jsonArray = (JSONArray) JSONSerializer.toJSON( str );
                    assertEquals( "JSON", jsonArray.getString(0) );
                    assertEquals( 1, jsonArray.getInt(1) );
                    assertEquals( 2.0d, jsonArray.getDouble(2), 0d );
                    assertTrue( jsonArray.getBoolean(3) );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JavaJSON">From Java to JSON</a>]
            </subsection>
            <subsection name="Creating a JSONArray from a Collection">
                <textarea cols="80" rows="9" class="java:nocontrols:nogutter" name="srccode">
                    List list = new ArrayList();
                    list.add( "JSON" );
                    list.add( "1" );
                    list.add( "2.0" );
                    list.add( "true" );
                    JSONArray jsonArray = (JSONArray) JSONSerializer.toJSON( list );
                    assertEquals( "JSON", jsonArray.getString(0) );
                    assertEquals( 1, jsonArray.getInt(1) );
                    assertEquals( 2.0d, jsonArray.getDouble(2), 0d );
                    assertTrue( jsonArray.getBoolean(3) );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JavaJSON">From Java to JSON</a>]
            </subsection>
            <subsection name="Creating a JSONArray from an array">
                <textarea cols="80" rows="6" class="java:nocontrols:nogutter" name="srccode">
                    Object[] array = new Object[]{ "JSON", "1", "2.0", "true" };
                    JSONArray jsonArray = (JSONArray) JSONSerializer.toJSON( array );
                    assertEquals( "JSON", jsonArray.getString(0) );
                    assertEquals( 1, jsonArray.getInt(1) );
                    assertEquals( 2.0d, jsonArray.getDouble(2), 0d );
                    assertTrue( jsonArray.getBoolean(3) );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JavaJSON">From Java to JSON</a>]
            </subsection>
            <subsection name="JavaScript functions">
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    String str = "{'func': function( param ){ doSomethingWithParam(param); }}";
                    JSONObject jsonObject = (JSONObject) JSONSerializer.toJSON( str );
                    JSONFunction func = (JSONFunction) jsonObject.get("func");
                    ArrayAssertions.assertEquals( new String[]{"param"}, func.getParams() );
                    assertEquals( "doSomethingWithParam(param);", func.getText() );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JavaJSON">From Java to JSON</a>]
            </subsection>
            <subsection name="Exclude properties">
                <textarea cols="80" rows="8" class="java:nocontrols:nogutter" name="srccode">
                    String str = "{'string':'JSON', 'integer': 1, 'double': 2.0, 'boolean': true}";
                    JsonConfig jsonConfig = new JsonConfig();
                    jsonConfig.setExcludes( new String[]{ "double", "boolean" } );
                    JSONObject jsonObject = (JSONObject) JSONSerializer.toJSON( str, jsonConfig );
                    assertEquals( "JSON", jsonObject.getString("string") );
                    assertEquals( 1, jsonObject.getInt("integer") );
                    assertFalse( jsonObject.has("double") );
                    assertFalse( jsonObject.has("boolean") );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JavaJSON">From Java to JSON</a>]
            </subsection>
            <subsection name="Exclude properties (with filters)">
                <textarea cols="80" rows="15" class="java:nocontrols:nogutter" name="srccode">
                    String str = "{'string':'JSON', 'integer': 1, 'double': 2.0, 'boolean': true}";
                    JsonConfig jsonConfig = new JsonConfig();
                    jsonConfig.setJsonPropertyFilter( new PropertyFilter(){
                    public boolean apply( Object source, String name, Object value ) {
                    if( "double".equals(value) || "boolean".equals(value) ){
                    return true;
                    }
                    return false;
                    }
                    });
                    JSONObject jsonObject = (JSONObject) JSONSerializer.toJSON( str, jsonConfig );
                    assertEquals( "JSON", jsonObject.getString("string") );
                    assertEquals( 1, jsonObject.getInt("integer") );
                    assertFalse( jsonObject.has("double") );
                    assertFalse( jsonObject.has("boolean") );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JavaJSON">From Java to JSON</a>]
            </subsection>
        </section>
        <section name="From JSON to Java">
            <subsection name="JSONObject to DynaBean">
                <textarea cols="80" rows="7" class="java:nocontrols:nogutter" name="srccode">
                    String str = "{'string':'JSON', 'integer': 1, 'double': 2.0, 'boolean': true}";
                    JSONObject jsonObject = (JSONObject) JSONSerializer.toJSON( str );
                    DynaBean bean = (DynaBean) JSONSerializer.toJava( jsonObject );
                    assertEquals( "JSON", bean.get("string") );
                    assertEquals( Integer.valueOf(1), bean.get("integer") );
                    assertEquals( Double.valueOf(2.0), bean.get("double") );
                    assertEquals( Boolean.TRUE, bean.get("boolean") );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONJava">From JSON to Java</a>]
            </subsection>
            <subsection name="JSONObject to JavaBean">
                <textarea cols="80" rows="25" class="java:nocontrols:nogutter" name="srccode">
                    public class MyJavaBean {
                    private String string;
                    private int integer;
                    private double dooble;
                    private boolean bool;

                    // getters &amp; setters
                    }

                    MyJavaBean bean = new MyJavaBean();
                    bean.setString( "JSON" );
                    bean.setInteger( 1 );
                    bean.setDooble( 2.0d );
                    bean.setBool( true );
                    JSONObject jsonObject = (JSONObject) JSONSerializer.toJSON( bean );
                    JsonConfig jsonConfig = new JsonConfig();
                    jsonConfig.setRootClass( MyJavaBean.class );
                    MyJavaBean bean2 = (MyJavaBean) JSONSerializer.toJava( jsonObject, jsonConfig );
                    assertNotNull( bean2 );
                    assertEquals( "JSON", bean2.getString() );
                    assertEquals( 1, bean2.getInteger() );
                    assertEquals( 2.0d, bean2.getDooble(), 0d );
                    assertTrue( bean2.getBool() );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONJava">From JSON to Java</a>]
            </subsection>
            <subsection name="JSONArray to List">
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    List input = new ArrayList();
                    input.add( "JSON" );
                    input.add( "1" );
                    input.add( "2.0" );
                    input.add( "true" );
                    JSONArray jsonArray = (JSONArray) JSONSerializer.toJSON( input );
                    List output = (List) JSONSerializer.toJava( jsonArray );
                    ArrayAssertions.assertEquals( input, output );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONJava">From JSON to Java</a>]
            </subsection>
            <subsection name="JSONArray to array">
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    List input = new ArrayList();
                    input.add( "JSON" );
                    input.add( "1" );
                    input.add( "2.0" );
                    input.add( "true" );
                    JSONArray jsonArray = (JSONArray) JSONSerializer.toJSON( input );
                    JsonConfig jsonConfig = new JsonConfig();
                    jsonConfig.setArrayMode( JsonConfig.MODE_OBJECT_ARRAY );
                    Object[] output = (Object[]) JSONSerializer.toJava( jsonArray, jsonConfig );
                    Object[] expected = new Object[]{ "JSON", "1", "2.0", "true" };
                    ArrayAssertions.assertEquals( expected, output);
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONJava">From JSON to Java</a>]
            </subsection>
            <subsection name="JSONArray to array (type conversion)">
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    List input = new ArrayList();
                    input.add( "1" );
                    input.add( "2" );
                    input.add( "3.0" );
                    JSONArray jsonArray = (JSONArray) JSONSerializer.toJSON( input );
                    JsonConfig jsonConfig = new JsonConfig();
                    jsonConfig.setArrayMode( JsonConfig.MODE_OBJECT_ARRAY );
                    jsonConfig.setRootClass( Integer.TYPE );
                    int[] output = (int[]) JSONSerializer.toJava( jsonArray, jsonConfig );
                    int[] expected = new int[]{ 1, 2, 3 };
                    ArrayAssertions.assertEquals( expected, output);
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONJava">From JSON to Java</a>]
            </subsection>
            <subsection name="JSONObject to JavaBean, exclude properties with filters">
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    public class MyJavaBean {
                    private String string;
                    private int integer;
                    private double dooble = 0d;
                    private boolean bool;

                    // getters &amp; setters
                    }

                    MyJavaBean bean = new MyJavaBean();
                    bean.setString( "JSON" );
                    bean.setInteger( 1 );
                    bean.setDooble( 2.0d );
                    bean.setBool( true );
                    JSONObject jsonObject = (JSONObject) JSONSerializer.toJSON( bean );
                    JsonConfig jsonConfig = new JsonConfig();
                    jsonConfig.setRootClass( MyJavaBean.class );
                    jsonConfig.setJavaPropertyFilter( new PropertyFilter(){
                    public boolean apply( Object source, String name, Object value ) {
                    if( "bool".equals( name ) || "dooble".equals( name ) ){
                    return true;
                    }
                    return false;
                    }
                    });
                    MyJavaBean bean2 = (MyJavaBean) JSONSerializer.toJava( jsonObject, jsonConfig );
                    assertNotNull( bean2 );
                    assertEquals( "JSON", bean2.getString() );
                    assertEquals( 1, bean2.getInteger() );
                    assertEquals( 0d, bean2.getDooble(), 0d );
                    assertFalse( bean2.getBool() );
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONJava">From JSON to Java</a>]
            </subsection>
        </section>
        <section name="From JSON to XML">
            <subsection name="JSONObject to XML">
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    String str = "{'name':'JSON','integer':1,'double':2.0,'boolean':true,'nested':{'id':42},'array':[1,2,3]}";
                    JSON json = JSONSerializer.toJSON( str );
                    XMLSerializer xmlSerializer = new XMLSerializer();
                    String xml = xmlSerializer.write( json );
                    System.out.println(xml);
                </textarea>
                <textarea cols="80" rows="5" class="xml:nocontrols:nogutter" name="srccode">
                    &lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;o&gt;
                    &lt;boolean type="boolean"&gt;true&lt;/boolean&gt;
                    &lt;double type="number"&gt;2.0&lt;/double&gt;
                    &lt;integer type="number"&gt;1&lt;/integer&gt;
                    &lt;name type="string"&gt;JSON&lt;/name&gt;
                    &lt;nested class="object"&gt;
                    &lt;id type="number"&gt;42&lt;/id&gt;
                    &lt;/nested&gt;
                    &lt;array class="array"&gt;
                    &lt;e type="number"&gt;1&lt;/e&gt;
                    &lt;e type="number"&gt;2&lt;/e&gt;
                    &lt;e type="number"&gt;3&lt;/e&gt;
                    &lt;/array&gt;
                    &lt;/o&gt;
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONXML">From JSON to XML</a>]
            </subsection>
            <subsection name="JSONObject to XML (no type hints)">
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    String str = "{'name':'JSON','integer':1,'double':2.0,'boolean':true,'nested':{'id':42},'array':[1,2,3]}";
                    JSON json = JSONSerializer.toJSON( str );
                    XMLSerializer xmlSerializer = new XMLSerializer();
                    xmlSerializer.setTypeHintsEnabled( false );
                    String xml = xmlSerializer.write( json );
                    System.out.println(xml);
                </textarea>
                <textarea cols="80" rows="5" class="xml:nocontrols:nogutter" name="srccode">
                    &lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;o&gt;
                    &lt;boolean&gt;true&lt;/boolean&gt;
                    &lt;double&gt;2.0&lt;/double&gt;
                    &lt;integer&gt;1&lt;/integer&gt;
                    &lt;name&gt;JSON&lt;/name&gt;
                    &lt;nested&gt;
                    &lt;id&gt;42&lt;/id&gt;
                    &lt;/nested&gt;
                    &lt;array&gt;
                    &lt;e&gt;1&lt;/e&gt;
                    &lt;e&gt;2&lt;/e&gt;
                    &lt;e&gt;3&lt;/e&gt;
                    &lt;/nested&gt;
                    &lt;/o&gt;
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONXML">From JSON to XML</a>]
            </subsection>
            <subsection name="JSONObject to XML (with json prefix)">
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    String str = "{'name':'JSON','integer':1,'double':2.0,'boolean':true,'nested':{'id':42},'array':[1,2,3]}";
                    JSON json = JSONSerializer.toJSON( str );
                    XMLSerializer xmlSerializer = new XMLSerializer();
                    xmlSerializer.setTypeHintsCompatibility( false );
                    String xml = xmlSerializer.write( json );
                    System.out.println(xml);
                </textarea>
                <textarea cols="80" rows="5" class="xml:nocontrols:nogutter" name="srccode">
                    &lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;o&gt;
                    &lt;boolean json_type="boolean"&gt;true&lt;/boolean&gt;
                    &lt;double json_type="number"&gt;2.0&lt;/double&gt;
                    &lt;integer json_type="number"&gt;1&lt;/integer&gt;
                    &lt;name json_type="string"&gt;JSON&lt;/name&gt;
                    &lt;nested json_class="object"&gt;
                    &lt;id json_type="number"&gt;42&lt;/id&gt;
                    &lt;/nested&gt;
                    &lt;array json_class="array"&gt;
                    &lt;e json_type="number"&gt;1&lt;/e&gt;
                    &lt;e json_type="number"&gt;2&lt;/e&gt;
                    &lt;e json_type="number"&gt;3&lt;/e&gt;
                    &lt;/array&gt;
                    &lt;/o&gt;
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONXML">From JSON to XML</a>]
            </subsection>
            <subsection name="JSONObject to XML (change node names)">
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    String str = "{'name':'JSON','integer':1,'double':2.0,'boolean':true,'nested':{'id':42},'array':[1,2,3]}";
                    JSON json = JSONSerializer.toJSON( str );
                    XMLSerializer xmlSerializer = new XMLSerializer();
                    xmlSerializer.setRootName( "root" );
                    xmlSerializer.setElementName( "element" );
                    String xml = xmlSerializer.write( json );
                    System.out.println(xml);
                </textarea>
                <textarea cols="80" rows="5" class="xml:nocontrols:nogutter" name="srccode">
                    &lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;root&gt;
                    &lt;boolean type="boolean"&gt;true&lt;/boolean&gt;
                    &lt;double type="number"&gt;2.0&lt;/double&gt;
                    &lt;integer type="number"&gt;1&lt;/integer&gt;
                    &lt;name type="string"&gt;JSON&lt;/name&gt;
                    &lt;nested class="object"&gt;
                    &lt;id type="number"&gt;42&lt;/id&gt;
                    &lt;/nested&gt;
                    &lt;array class="array"&gt;
                    &lt;element type="number"&gt;1&lt;/e&gt;
                    &lt;element type="number"&gt;2&lt;/e&gt;
                    &lt;element type="number"&gt;3&lt;/e&gt;
                    &lt;/array&gt;
                    &lt;/root&gt;
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONXML">From JSON to XML</a>]
            </subsection>
            <subsection name="JSONArray to XML">
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    String str = "['JSON', 1, 2.0, true, {'id':42}, [1,2,3]]";
                    JSON json = JSONSerializer.toJSON( str );
                    XMLSerializer xmlSerializer = new XMLSerializer();
                    String xml = xmlSerializer.write( json );
                    System.out.println(xml);
                </textarea>
                <textarea cols="80" rows="5" class="xml:nocontrols:nogutter" name="srccode">
                    &lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;a&gt;
                    &lt;e type="string"&gt;JSON&lt;/e&gt;
                    &lt;e type="number"&gt;1&lt;/e&gt;
                    &lt;e type="number"&gt;2.0&lt;/e&gt;
                    &lt;e type="boolean"&gt;true&lt;/e&gt;
                    &lt;e class="object"&gt;
                    &lt;id type="number"&gt;42&lt;/id&gt;
                    &lt;/e&gt;
                    &lt;e class="array"&gt;
                    &lt;e type="number"&gt;1&lt;/e&gt;
                    &lt;e type="number"&gt;2&lt;/e&gt;
                    &lt;e type="number"&gt;3&lt;/e&gt;
                    &lt;/e&gt;
                    &lt;/a&gt;
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONXML">From JSON to XML</a>]
            </subsection>
            <subsection name="JSONArray to XML (no type hints)">
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    String str = "['JSON', 1, 2.0, true, {'id':42}, [1,2,3]]";
                    JSON json = JSONSerializer.toJSON( str );
                    XMLSerializer xmlSerializer = new XMLSerializer();
                    xmlSerializer.setTypeHintsEnabled( false );
                    String xml = xmlSerializer.write( json );
                    System.out.println(xml);
                </textarea>
                <textarea cols="80" rows="5" class="xml:nocontrols:nogutter" name="srccode">
                    &lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;a&gt;
                    &lt;e&gt;JSON&lt;/e&gt;
                    &lt;e&gt;1&lt;/e&gt;
                    &lt;e&gt;2.0&lt;/e&gt;
                    &lt;e&gt;true&lt;/e&gt;
                    &lt;e&gt;
                    &lt;id&gt;42&lt;/id&gt;
                    &lt;/e&gt;
                    &lt;e&gt;
                    &lt;e&gt;1&lt;/e&gt;
                    &lt;e&gt;2&lt;/e&gt;
                    &lt;e&gt;3&lt;/e&gt;
                    &lt;/e&gt;
                    &lt;/a&gt;
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONXML">From JSON to XML</a>]
            </subsection>
            <subsection name="JSONArray to XML (with json prefix)">
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    String str = "['JSON', 1, 2.0, true, {'id':42}, [1,2,3]]";
                    JSON json = JSONSerializer.toJSON( str );
                    XMLSerializer xmlSerializer = new XMLSerializer();
                    xmlSerializer.setTypeHintsCompatibility( false );
                    String xml = xmlSerializer.write( json );
                    System.out.println(xml);
                </textarea>
                <textarea cols="80" rows="5" class="xml:nocontrols:nogutter" name="srccode">
                    &lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;a&gt;
                    &lt;e json_type="string"&gt;JSON&lt;/e&gt;
                    &lt;e json_type="number"&gt;1&lt;/e&gt;
                    &lt;e json_type="number"&gt;2.0&lt;/e&gt;
                    &lt;e json_type="boolean"&gt;true&lt;/e&gt;
                    &lt;e json_class="object"&gt;
                    &lt;id json_type="number"&gt;42&lt;/id&gt;
                    &lt;/e&gt;
                    &lt;e json_class="array"&gt;
                    &lt;e json_type="number"&gt;1&lt;/e&gt;
                    &lt;e json_type="number"&gt;2&lt;/e&gt;
                    &lt;e json_type="number"&gt;3&lt;/e&gt;
                    &lt;/e&gt;
                    &lt;/a&gt;
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONXML">From JSON to XML</a>]
            </subsection>
            <subsection name="Flatten JSONArray into parent">
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    String str = "{'number': [1,2,3]}";
                    JSONObject json = (JSONObject) JSONSerializer.toJSON( str );
                    XMLSerializer xmlSerializer = new XMLSerializer();
                    xmlSerializer.setTypeHintsEnabled( false );
                    String xml = xmlSerializer.write( json );
                    System.out.println( xml );
                    json.getJSONArray( "number" ).setExpandElements( true );
                    xml = xmlSerializer.write( json );
                    System.out.println( xml );
                </textarea>
                <textarea cols="80" rows="5" class="xml:nocontrols:nogutter" name="srccode">
                    &lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;o&gt;
                    &lt;number&gt;
                    &lt;e&gt;1&lt;/e&gt;
                    &lt;e&gt;2&lt;/e&gt;
                    &lt;e&gt;3&lt;/e&gt;
                    &lt;/number&gt;
                    &lt;/o&gt;

                    &lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;o&gt;
                    &lt;number&gt;1&lt;/number&gt;
                    &lt;number&gt;2&lt;/number&gt;
                    &lt;number&gt;3&lt;/number&gt;
                    &lt;/o&gt;
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JSONXML">From JSON to XML</a>]
            </subsection>
        </section>
        <section name="From XML to JSON">
            <subsection name="XML to JSONObject">
                <textarea cols="80" rows="5" class="xml:nocontrols:nogutter" name="srccode">
                    &lt;o number="1"&gt;
                    first
                    &lt;string&gt;json&lt;/string&gt;
                    &lt;array&gt;
                    &lt;e&gt;1&lt;/e&gt;
                    &lt;e&gt;true&lt;/e&gt;
                    &lt;/array&gt;
                    &lt;/o&gt;
                </textarea>
                <textarea cols="80" rows="5" class="java:nocontrols:nogutter" name="srccode">
                    String xml = ...
                    XMLSerializer xmlSerializer = new XMLSerializer();
                    JSON json = xmlSerializer.read( xml );
                    System.out.println( json.toString(2) );
                </textarea>
                <textarea cols="80" rows="5" class="js:nocontrols:nogutter" name="srccode">
                    {
                    "string": "json",
                    "#text": "first",
                    "array": [
                    "1",
                    "true"
                    ],
                    "@number": "1"
                    }
                </textarea>[<a href="#Snippets">Index</a>|<a href="#XMLJSON">From XML to JSON</a>]
            </subsection>
        </section>
        <section name="Groovy Support">
            <subsection name="Using the JsonGroovyBuilder">
                <p>The following snippets produce the same JSON output</p>
                <textarea cols="80" rows="5" class="groovy:nocontrols:nogutter" name="srccode">
                    def builder = new JsonGroovyBuilder()
                    def books = builder.books {
                    book = [title: "Groovy in Action", author: "Dierk Konig"]
                    book = [title: "Groovy in Action", author: "Dierk Konig"]
                    }
                </textarea>
                <textarea cols="80" rows="5" class="groovy:nocontrols:nogutter" name="srccode">
                    def builder = new JsonGroovyBuilder()
                    def books = builder.books {
                    book = new Book(title: "Groovy in Action", author: "Dierk Konig")
                    }
                </textarea>
                <textarea cols="80" rows="5" class="groovy:nocontrols:nogutter" name="srccode">
                    def builder = new JsonGroovyBuilder()
                    def books = builder.books {
                    book = {
                    title = "Groovy in Action"
                    author= "Dierk Konig"
                    }
                    book = {
                    title = "Groovy in Action"
                    author= "Dierk Konig"
                    }
                    }
                </textarea>
                <textarea cols="80" rows="5" class="groovy:nocontrols:nogutter" name="srccode">
                    def builder = new JsonGroovyBuilder()
                    def books = builder.books {
                    2.times {
                    book = {
                    title = "Groovy in Action"
                    author= "Dierk Konig"
                    }
                    }
                    }
                </textarea>
                <textarea cols="80" rows="5" class="groovy:nocontrols:nogutter" name="srccode">
                    def builder = new JsonGroovyBuilder()
                    def books = builder.books {
                    2.times {
                    book {
                    title = "Groovy in Action"
                    author= "Dierk Konig"
                    }
                    }
                    }
                </textarea>
                <textarea cols="80" rows="5" class="groovy:nocontrols:nogutter" name="srccode">
                    def builder = new JsonGroovyBuilder()
                    def books = builder.books {
                    book {
                    title = "Groovy in Action"
                    author= "Dierk Konig"
                    }
                    book {
                    title = "Groovy in Action"
                    author= "Dierk Konig"
                    }
                    }
                </textarea>
                <textarea cols="80" rows="5" class="js:nocontrols:nogutter" name="srccode">
                    {
                    "books": {
                    "book": [
                    {
                    "title": "Groovy in Action",
                    "author": "Dierk Konig"
                    },
                    {
                    "title": "Groovy in Action",
                    "author": "Dierk Konig"
                    }
                    ]
                    }
                    }
                </textarea>[<a href="#Snippets">Index</a>|<a href="#Groovy">Groovy Support</a>]
            </subsection>
        </section>
        <section name="JRuby Support">
            <subsection name="Creating a JSONObject">
                <textarea cols="80" rows="5" class="ruby:nocontrols:nogutter" name="srccode">
                    json = JSONObject.new
                    json.element("string","json").element("bool",true)
                    json["integer"] = 1
                    assert_equal "json", json["string"]
                    assert_equal true, json["bool"]
                    assert_equal 1, json["integer"]
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JRuby">JRuby Support</a>]
            </subsection>
            <subsection name="Append elements to JSONObject with &lt;&lt; (array)">
                <textarea cols="80" rows="5" class="ruby:nocontrols:nogutter" name="srccode">
                    json = JSONObject.new
                    json &amp;&amp; ["key","value"]
                    assert !json.empty?
                    assert_equal "value", json["key"]
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JRuby">JRuby Support</a>]
            </subsection>
            <subsection name="Append elements to JSONObject with &lt;&lt; (hash)">
                <textarea cols="80" rows="5" class="ruby:nocontrols:nogutter" name="srccode">
                    json = JSONObject.new
                    json &amp; {"key1" => "value1", "key2" => "value2" }
                    assert !json.empty?
                    assert_equal 2, json.size()
                    assert_equal "value1", json["key1"]
                    assert_equal "value2", json["key2"]
                </textarea>[<a href="#Snippets">Index</a>|<a href="#JRuby">JRuby Support</a>]
            </subsection>
        </section>
    </body>
</document>
